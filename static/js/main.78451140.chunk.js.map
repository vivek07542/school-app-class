{"version":3,"sources":["UI/Input/Input.js","Component/StudentForm/StudentForm.js","Utilities/validity.js","UI/BackDrop/BackDrop.js","UI/Modal/Modal.js","Store/Redux/MarkReducer.js","Component/MarkDetail/MarkDetail.js","Component/StudentSummary/StudentList/StudentList.js","Store/Redux/reducer.js","Component/StudentSummary/StudentSummary.js","Component/MarkSummary/MarkSummary.js","Container/SchoolForm.js","App.js","reportWebVitals.js","Store/Redux/index.js","Store/Saga/saga.js","Store/Saga/MarkSaga.js","Store/Saga/index.js","index.js"],"names":["Input","inputElement","validationError","inputClasses","this","props","componentClasses","inValid","shouldValidate","touched","push","className","elementType","onChange","changed","join","elementConfig","value","options","map","e","key","name","label","Component","StudentForm","inputChangeHandler","event","inputIdentifier","updatedstudentDetail","state","studentDetail","updatedFormElement","target","changeCountry","changeState","valid","rules","isValid","required","trim","absolute","length","isEmail","test","isNumeric","checkValidatity","validation","formIsValid","setState","updatedFormElementState","find","cntry","states","updatedFormElementCity","cities","resetForm","updateStudentDetail","editStudentDetailMode","id","submitHandler","preventDefault","studentData","formIdentifier","submitForm","firstName","type","placeholder","lastName","gender","street","country","city","mobileNumber","email","baseState","updatedStateEditCondition","editStudentDetailModeObject","editStudentDetail","property","studentDetailArray","config","form","onSubmit","formElement","disabled","Backdrop","show","onClick","clicked","Modal","nextProps","nextState","children","modelClosed","style","transform","opacity","ADD_MARK_DETAIL_INIT","ADD_MARK_DETAIL_SUCCESS","SUBMIT_BUTTON_HANDLER_INIT","SUBMIT_BUTTON_HANDLER_SUCCESS","EDIT_MARK_INIT","EDIT_MARK_SUCCESS","initialState","activePopup","studentMarkObject","editMarkMode","markDetail","studentId","studentName","markReducer","action","MarkDetail","semester","marks","subject","markObtained","addBtnDisable","subBtnDisable","inputHandler","addButtonHandler","subractButtonHandler","index","values","splice","onChangeHandler","subjectMark","validityCheck","formValidityCheck","addMarkToStudent","markData","object","onAddMarkToStudent","resetState","array","editMarks","markContentDetail","inputClasse","inputClass","connect","dispatch","markObject","markAction","StudentList","editStudentMarksMode","addButtonDisable","editHandler","editClick","deleteHandler","deleteClick","addClickHandler","addClick","eachChild","address","INIT","STUDENT_DETAIL_SUBMIT_INIT","STUDENT_DETAIL_SUBMIT_SUCCESS","EDIT_STUDENT_DETAIL_INIT","EDIT_STUDENT_DETAIL_SUCCESS","DELETE_STUDENT_DETAIL_INIT","DELETE_STUDENT_DETAIL_SUCCESS","initState","addStudentMarkObject","reducer","StudentSummary","student","details","onEditStudentDetailHandler","onDeleteStudentDetailHandler","onAddMarkDetailHandler","MarkReducer","formAction","MarkSummary","editStudentMark","onEditStudentMark","markSummary","score","editObject","SchoolForm","onInitilizing","onSubmitForm","studentDetailObject","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","initilizerHandlerSaga","submitFormHandlerSaga","editStudentDetailHandlerSaga","deleteStudentDetailHandlerSaga","window","localStorage","clear","schoolApp","markApp","setItem","JSON","stringify","localValue","parse","getItem","updateValue","editObjIndex","findIndex","studentLast","expenseLastItem","put","editObj","addMarkDetailHandlerSaga","addMarkToStudentSaga","editStudentMarkSaga","localMarkValue","ePopup","mark","watch","takeLatest","actionType","actionMarkType","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78451140.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import DropDown from \"../DropDown/DropDown\";\r\nimport \"./Input.css\";\r\n\r\nclass Input extends Component{\r\n    render(){\r\n        let inputElement = null;\r\n        let validationError = null;\r\n        const inputClasses = [this.props.componentClasses];\r\n        if(this.props.inValid && this.props.shouldValidate && this.props.touched){\r\n            inputClasses.push(\"is-invalid\");\r\n            validationError = <p className = \"invalid-feedback\">Please Enter a Valid Value !</p>\r\n        }\r\n        if(!this.props.inValid && this.props.shouldValidate && this.props.touched){\r\n            inputClasses.push(\"is-valid\");\r\n            validationError = <p className = \"valid-feedback\">Looks Good!</p>\r\n        }\r\n        switch (this.props.elementType) {\r\n            case (\"input\"):\r\n                inputElement = <input \r\n                 onChange = {this.props.changed}\r\n                    className = {inputClasses.join(' ')}\r\n                  {...this.props.elementConfig}\r\n                    value={this.props.value}\r\n                />\r\n                break\r\n            case (\"textarea\"):\r\n                inputElement = \r\n                <textarea\r\n                 onChange = {this.props.changed}\r\n                 {...this.props.elementConfig}\r\n                   className = {inputClasses.join(' ')} \r\n                   value={this.props.value}\r\n                />\r\n                break\r\n                case (\"select\"):\r\n                    inputElement =\r\n                    <select   value={this.props.value} onChange={this.props.changed} className = {inputClasses.join(' ')} {...this.props.elementConfig}>\r\n                    <option>{this.props.value}</option>\r\n                    {this.props.elementConfig.options.map((e, key) => {\r\n                        return <option key={key} value={e.name}>{e.name}</option>;\r\n                    })}\r\n                    </select>\r\n                break\r\n                case (\"citySel\"):\r\n                    inputElement =\r\n                    <select value= {this.props.value} onChange={this.props.changed} className = {inputClasses.join(' ')} {...this.props.elementConfig}>\r\n                    <option>{this.props.value}</option>\r\n                         {this.props.elementConfig.options.map((e, key) => {\r\n                          return <option key={key} value={e}>{e}</option>;\r\n                    })}\r\n                    </select>\r\n                break\r\n            default:\r\n                inputElement = <input onChange = {this.props.changed} {...this.props.elementConfig}\r\n                    value={this.props.value}\r\n                />\r\n        }\r\n        return(\r\n            <div className=\"form-row Input justify-content-center align-items-start \">\r\n            <div className=\"col-md-4 mb-1 form-inline \">\r\n                    <div className=\"col-5\">\r\n                        <label>{this.props.label}</label>\r\n                    </div>\r\n                    <div className=\"col-7\">\r\n                         {inputElement}\r\n                         {validationError}\r\n                    </div>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n} \r\n   \r\n//     return (\r\n//         <div className=\"form-row justify-content-center align-items-start \">\r\n//             <div className=\"col-md-4 mb-1 form-inline\">\r\n//                     <div className=\"col-5\">\r\n//                         <label>{props.label}</label>\r\n//                     </div>\r\n//                     <div className=\"col-7\">\r\n//                          {inputElement}\r\n//                     </div>\r\n//             </div>\r\n//         </div>\r\n\r\n//     )\r\n// }\r\nexport default Input;","import React, { Component } from 'react';\r\nimport Input from \"../../UI/Input/Input\";\r\nimport {checkValidatity} from \"../../Utilities/validity\";\r\n\r\nexport default class StudentForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            studentDetail: {\r\n                firstName: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'First Name',\r\n                    },\r\n                    className: \"form-control mb-2\",\r\n                    value: \"\",\r\n                    label: \"First name\",\r\n                    validation:{\r\n                        required : true\r\n                    },\r\n                    valid:false,\r\n                    touched :false\r\n                },\r\n                lastName: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Last Name',\r\n                    },\r\n                    className: \"form-control mb-2\",\r\n                    value: \"\",\r\n                    label: \"Last name\",\r\n                    validation:{\r\n                        required : true\r\n                    },\r\n                    valid:false,\r\n                    touched :false\r\n                },\r\n                gender: {\r\n                    elementType : \"select\",\r\n                    elementConfig : {\r\n                        placeholder: \"Select Gender\",\r\n                      options:[\r\n                      { name : \"Male\"},\r\n                      { name : \"Female\"},]\r\n                    },\r\n                    className:\"form-control mb-2\",\r\n                    label : \"Gender\",\r\n                    value: \"--Choose Gender--\",\r\n                    valid:false,\r\n                    validation:{},\r\n                    touched :false\r\n                },\r\n                street: {\r\n                    elementType: \"textarea\",\r\n                    elementConfig: {\r\n                        type: \"text\",\r\n                        placeholder: \"Street\",\r\n                    },\r\n                    className: \"form-control mb-2\",\r\n                    value: \"\",\r\n                    label: \"Street\",\r\n                    validation:{\r\n                        required : true\r\n                    },\r\n                    valid:false,\r\n                    touched :false\r\n                },\r\n                country: {\r\n                    elementType: \"select\",\r\n                    elementConfig: {\r\n                        placeholder: \"Country\",\r\n                        options:[]\r\n                    },\r\n                    className: \"form-control mb-2\",\r\n                    label: \"Country\",\r\n                    value : \"--Choose Country--\",\r\n                    validation:{\r\n                        required : true\r\n                    },\r\n                    valid:false,\r\n                    touched :false\r\n    \r\n                },\r\n                state: {\r\n                    elementType: \"select\",\r\n                    elementConfig: {\r\n                        placeholder: \"State\",\r\n                        options:[]                    \r\n                    },\r\n                    className: \"form-control mb-2\",\r\n                    label: \"State\",\r\n                    value : \"--Choose State--\",\r\n                    validation:{\r\n                        required : true\r\n                    },\r\n                    valid:false,\r\n                    touched :false\r\n                },\r\n                city: {\r\n                    elementType: \"citySel\",\r\n                    elementConfig: {\r\n                        placeholder: \"City\",\r\n                        options : []\r\n                    },\r\n                    className: \"form-control mb-2\",\r\n                    label: \"City\",\r\n                    value : \"--Choose City--\",\r\n                    validation:{\r\n                        required : true\r\n                    },\r\n                    valid:false,\r\n                    touched :false\r\n                },\r\n                mobileNumber: {\r\n                    elementType: \"input\",\r\n                    elementConfig: {\r\n                        type: \"number\",\r\n                        placeholder: \"Mobile Number\",\r\n                    },\r\n                    className: \"form-control mb-2\",\r\n                    value: \"\",\r\n                    label: \"Mobile Number\",\r\n                    validation:{\r\n                        required : true,\r\n                        absolute : 10\r\n                    },\r\n                    valid:false,\r\n                    touched :false\r\n    \r\n                },\r\n                email: {\r\n                    elementType: \"input\",\r\n                    elementConfig: {\r\n                        type: \"email\",\r\n                        placeholder: \"Your E-Mail\",\r\n                    },\r\n                    className: \"form-control mb-2\",\r\n                    value: \"\",\r\n                    label: \"E-Mail Address \",\r\n                    validation:{\r\n                        required : true,\r\n                        isEmail:true\r\n                    },\r\n                    valid:false,\r\n                    touched :false\r\n                }\r\n            },\r\n            formIsValid: false,\r\n            editStudentDetailMode : false,\r\n            id : null\r\n        } \r\n    }\r\n    \r\n    componentDidUpdate(){\r\n        this.baseState = {...this.state};\r\n        if(this.state.editStudentDetailMode !== this.props.editStudentDetailMode ){\r\n            const updatedStateEditCondition = {...this.state};\r\n                updatedStateEditCondition.formIsValid = true;\r\n                updatedStateEditCondition.editStudentDetailMode = true;\r\n                updatedStateEditCondition.id = this.props.editStudentDetailModeObject.id;\r\n                this.setState(updatedStateEditCondition);\r\n            const updateStudentDetail = {...this.state.studentDetail};\r\n            const editStudentDetail = this.props.editStudentDetailModeObject;\r\n           \r\n            for(let key in updateStudentDetail){\r\n                for(let property in editStudentDetail){\r\n                    if(key === property){\r\n                        updateStudentDetail[key].value = editStudentDetail[property];\r\n                        updateStudentDetail[key].touched = true;\r\n                        updateStudentDetail[key].valid = true;\r\n                    }\r\n                } \r\n            }\r\n\r\n            this.setState({studentDetail:updateStudentDetail});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const updatedstudentDetail = { ...this.state.studentDetail };\r\n        for(let key in updatedstudentDetail){\r\n            if(key === \"country\"){\r\n                const updatedFormElement = { ...updatedstudentDetail[key]};\r\n                updatedFormElement.elementConfig.options = [\r\n                    {\r\n                        name: 'Germany',\r\n                        states: [\r\n                            { name: 'A', cities: ['Duesseldorf', 'Leinfelden-Echterdingen', 'Eschborn'] }\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Spain',\r\n                        states: [\r\n                            { name: 'B', cities: ['Barcelona'] }\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'USA',\r\n                        states: [\r\n                            { name: 'California', cities: [\"Los Angeles\", \"San Diego\"] },\r\n                            { name: 'Texas', cities: [\"Dallas\", \"Austin\"] },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Mexico',\r\n                        states: [\r\n                            { name: 'D', cities: ['Puebla'] }\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'India',\r\n                        states: [\r\n                            { name: \"Assam\", cities: [\"Dispur\", \"Guwahati\"] },\r\n                            { name: \"Gujarat\", cities: [\"Vadodara\", \"Surat\", \"Bharuch\"] },\r\n                            { name: \"Madhya Pradesh\", cities: [\"Indore\", \"Gwalior\", \"Bhopal\", \"Guna\"] },\r\n                        ]\r\n                    },\r\n                ]\r\n                updatedstudentDetail[key] = updatedFormElement;\r\n                this.setState({studentDetail : updatedstudentDetail});\r\n            }\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, inputIdentifier) => {\r\n        const updatedstudentDetail = { ...this.state.studentDetail};\r\n        const updatedFormElement = { ...updatedstudentDetail[inputIdentifier] };\r\n        updatedFormElement.value = event.target.value;\r\n        if (inputIdentifier === \"country\") {\r\n            this.changeCountry(event,updatedstudentDetail,updatedFormElement);\r\n        }\r\n        else if (inputIdentifier === \"state\") {\r\n            this.changeState(event,updatedstudentDetail,updatedFormElement);\r\n        }\r\n        updatedFormElement.valid = checkValidatity(updatedFormElement.value,updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedstudentDetail[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedstudentDetail){\r\n            formIsValid = updatedstudentDetail[inputIdentifier].valid && formIsValid\r\n        }\r\n        this.setState({studentDetail : updatedstudentDetail,formIsValid : formIsValid});\r\n    }\r\n    \r\n    changeCountry = (event,updatedstudentDetail,updatedFormElement) => {\r\n        for(let key in updatedstudentDetail){\r\n            if(key === \"state\"){\r\n                const updatedFormElementState = { ...updatedstudentDetail[key]};\r\n                updatedFormElementState.elementConfig.options = updatedFormElement.elementConfig.options.find(cntry => cntry.name === event.target.value).states;\r\n                updatedstudentDetail[key] = updatedFormElementState;\r\n                this.setState({studentDetail : updatedstudentDetail});\r\n            }\r\n        }\r\n    }\r\n\r\n    changeState = (event,updatedstudentDetail,updatedFormElement) => {\r\n        for(let key in updatedstudentDetail){\r\n            if(key === \"city\"){\r\n                const updatedFormElementCity = { ...updatedstudentDetail[key]};\r\n                updatedFormElementCity.elementConfig.options = updatedFormElement.elementConfig.options.find(cntry => cntry.name === event.target.value).cities;\r\n                updatedstudentDetail[key] = updatedFormElementCity;\r\n                this.setState({studentDetail : updatedstudentDetail});\r\n            }\r\n        }\r\n    }\r\n    resetForm=()=>{\r\n        const updateStudentDetail = {...this.state};\r\n        for(let key in updateStudentDetail.studentDetail){\r\n            updateStudentDetail.studentDetail[key].valid = false;\r\n            updateStudentDetail.studentDetail[key].touched = false;\r\n            if(key === \"gender\"){\r\n                updateStudentDetail.studentDetail[key].value = \"--Choose Gender--\" \r\n            }        \r\n            else if(key === \"country\"){\r\n                updateStudentDetail.studentDetail[key].value = \"--Choose Country--\" \r\n            }\r\n            else if(key === \"state\"){\r\n                updateStudentDetail.studentDetail[key].value = \"--Choose State--\" \r\n            }\r\n            else if(key === \"city\"){\r\n                updateStudentDetail.studentDetail[key].value = \"--Choose City--\" \r\n            }\r\n            else{\r\n                updateStudentDetail.studentDetail[key].value = \" \";\r\n            }    \r\n        }   \r\n        updateStudentDetail.formIsValid = false;\r\n        updateStudentDetail.editStudentDetailMode = false;\r\n        updateStudentDetail.id = null; \r\n        this.setState(updateStudentDetail);\r\n    }\r\n    submitHandler = (event)=>{\r\n        event.preventDefault();\r\n        const studentData = {};\r\n        studentData.id = this.state.id;\r\n        for(let formIdentifier in this.state.studentDetail){\r\n            studentData[formIdentifier] = this.state.studentDetail[formIdentifier].value;\r\n        }\r\n        this.props.submitForm(this.state.editStudentDetailMode,studentData);\r\n        this.resetForm();\r\n    }\r\n    render() {\r\n        const studentDetailArray = [];\r\n        for (let key in this.state.studentDetail) {\r\n            studentDetailArray.push({\r\n                id: key,\r\n                config: this.state.studentDetail[key]\r\n            })\r\n        }\r\n        let form = (\r\n            <div className=\"form-group \">\r\n                <form onSubmit={this.submitHandler}>\r\n                    {studentDetailArray.map(formElement => (\r\n                        <Input\r\n                            key={formElement.id}\r\n                            elementType={formElement.config.elementType}\r\n                            elementConfig={formElement.config.elementConfig}\r\n                            value={formElement.config.value}\r\n                            componentClasses = {formElement.config.className}\r\n                            inValid = {!formElement.config.valid}\r\n                            touched ={formElement.config.touched}\r\n                            shouldValidate = {formElement.config.validation}\r\n                            label={formElement.config.label}\r\n                            changed={(event) => { this.inputChangeHandler(event, formElement.id) }}\r\n\r\n                        />\r\n                    ))}\r\n                    <div className=\"row justify-content-center\">\r\n                        <button className=\"btn btn-outline-primary my-3\" disabled ={!this.state.formIsValid}>Save form</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n        return (\r\n            <div>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}","export const checkValidatity=(value,rules)=>{\r\n    let isValid = true;\r\n\r\n    if(rules.required){\r\n        isValid = value.trim() !=='' && isValid;\r\n    }\r\n    if(rules.absolute){\r\n        isValid = value.length === rules.absolute && isValid;\r\n    }\r\n    if(!rules){\r\n        return true;\r\n    }\r\n    if(rules.isEmail){\r\n        const pattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n    if(rules.isNumeric){\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n}","import React from 'react'\r\nimport \"./BackDrop.css\";\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n\r\n)\r\n  \r\n\r\n\r\nexport default Backdrop\r\n","import React, { Component } from 'react';\r\nimport \"./Modal.css\";\r\n// import Aux from \"../../../hoc/Auxilary\";\r\nimport Backdrop from \"../BackDrop/BackDrop\";\r\nclass Modal extends Component{\r\n    shouldComponentUpdate(nextProps,nextState){\r\n       return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }  \r\n    render(){\r\n        return (\r\n            <>\r\n            <Backdrop show={this.props.show} clicked={this.props.modelClosed}/>\r\n            <div className=\"Modal\"\r\n            style={{\r\n                transform:this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                opacity: this.props.show ? \"1\" : \"0\"\r\n            }}>\r\n                {this.props.children}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal\r\n","export const ADD_MARK_DETAIL_INIT = \"ADD_MARK_DETAIL_INIT\"; \r\nexport const ADD_MARK_DETAIL_SUCCESS = \"ADD_MARK_DETAIL_SUCCESS\"; \r\n// export const ADD_BUTTON_HANDLER_INIT = \"ADD_BUTTON_HANDLER_INIT\";\r\n// export const ADD_BUTTON_HANDLER_SUCCESS = \"ADD_BUTTON_HANDLER_SUCCESS\";\r\n// export const SUBRACT_BUTTON_HANDLER_INIT = \"SUBRACT_BUTTON_HANDLER_INIT\";\r\n// export const SUBRACT_BUTTON_HANDLER_SUCCESS = \"SUBRACT_BUTTON_HANDLER_SUCCESS\";\r\nexport const SUBMIT_BUTTON_HANDLER_INIT = \"SUBMIT_BUTTON_HANDLER_INIT\"\r\nexport const SUBMIT_BUTTON_HANDLER_SUCCESS = \"SUBMIT_BUTTON_HANDLER_SUCCESS\"\r\nexport const EDIT_MARK_INIT = \"EDIT_MARK_INIT\";\r\nexport const EDIT_MARK_SUCCESS = \"EDIT_MARK_SUCCESS\";\r\n\r\nexport const addMarkDetailHandler = (id,studentName,activePopup) =>{\r\n    return{\r\n        type:ADD_MARK_DETAIL_INIT,\r\n        id:id,\r\n        studentName : studentName,\r\n        activePopup:activePopup\r\n    }\r\n}\r\n\r\nexport const addMarkDetailHandlerSuccess = (markApp,id,studentName) =>{\r\n    \r\n    return{\r\n        type:ADD_MARK_DETAIL_SUCCESS,ePopup:markApp.activePopup,\r\n        id:id,\r\n        studentName : studentName,\r\n        activePopup : markApp.activePopup\r\n    }\r\n}\r\n\r\nexport const addMarkToStudentInit = (editMarkMode,markObject) =>{\r\n    return{\r\n        type : SUBMIT_BUTTON_HANDLER_INIT,\r\n        editMarkMode : editMarkMode,\r\n        markObject : markObject\r\n    }\r\n}\r\nexport const addMarkToStudentSuccess = (markApp) =>{\r\n    return{\r\n        type:SUBMIT_BUTTON_HANDLER_SUCCESS,\r\n        editMarkMode : markApp.editMarkMode,\r\n        activePopup:markApp.activePopup,\r\n        markDetail : markApp.markDetail,\r\n        studentId : markApp.studentId,\r\n        studentName : markApp.studentName\r\n    }\r\n}\r\n\r\nexport const editStudentMarkInit = (editObject)=>{\r\n    return{\r\n        type : EDIT_MARK_INIT,\r\n        editObject : editObject\r\n    }\r\n}\r\n\r\nexport const editStudentMarkSuccess = (markApp) =>{\r\n    return{\r\n        type : EDIT_MARK_SUCCESS,\r\n        editMarkMode : markApp.editMarkMode,\r\n        activePopup:markApp.activePopup,\r\n        studentMarkObject:markApp.studentMarkObject,\r\n        studentId : markApp.studentId,\r\n        studentName : markApp.studentName\r\n    }\r\n}\r\n\r\n// export const addButtonHandlerInit = (semester,studentId,id,subject,marks) =>{\r\n//     return{\r\n//         type : ADD_BUTTON_HANDLER_INIT,\r\n//         semester : semester,\r\n//         studentId : studentId,\r\n//         id : id,\r\n//         subject : subject,\r\n//         mark : marks\r\n//     }\r\n// }\r\n// export const addButtonHandlerSuccess = (markApp) =>{\r\n//     return{\r\n//         type : ADD_BUTTON_HANDLER_SUCCESS,\r\n//         markDetail:markApp.markDetail,\r\n\r\n//     }\r\n// }\r\n\r\n// export const subractButtonHandlerInit = (studentId,id) =>{\r\n//     return{\r\n//         type:SUBRACT_BUTTON_HANDLER_INIT,\r\n//         studentId : studentId,\r\n//         id:id\r\n//     }\r\n// }\r\n// export const subractButtonHandlerSuccess = (markApp) =>{\r\n//     return{\r\n//         type:SUBRACT_BUTTON_HANDLER_SUCCESS,\r\n//         markDetail:markApp.markDetail\r\n//     }\r\n// }\r\nconst initialState = {\r\n    activePopup : false,\r\n    studentMarkObject : {},\r\n    editMarkMode : false,\r\n    markDetail : [],\r\n    studentId : \"\",\r\n    studentName : \"\"\r\n}\r\n\r\nconst markReducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case ADD_MARK_DETAIL_SUCCESS : \r\n        return{\r\n            ...state,\r\n            activePopup : action.activePopup,\r\n            studentId:action.id,\r\n            studentName : action.studentName\r\n            \r\n        }\r\n        case SUBMIT_BUTTON_HANDLER_SUCCESS:\r\n            return{\r\n                ...state,\r\n            editMarkMode : action.editMarkMode,\r\n            activePopup : action.activePopup,\r\n            markDetail : action.markDetail,\r\n            studentId : action.studentId,\r\n            studentName : action.studentName    \r\n        }\r\n        case EDIT_MARK_SUCCESS :\r\n            return{\r\n                ...state,\r\n                editMarkMode : action.editMarkMode,\r\n                activePopup:action.activePopup,\r\n                studentMarkObject : action.studentMarkObject,\r\n                studentId : action.studentId,\r\n                studentName : action.studentName \r\n            }\r\n        default : \r\n        return state\r\n    }\r\n}\r\nexport default markReducer;","import React, { Component } from 'react'\r\nimport \"./MarkDetail.css\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport { connect } from 'react-redux';\r\nimport * as markAction from \"../../Store/Redux/MarkReducer\";\r\n\r\n// import MarkList from \"./MarkList/MarkList/MarkList\";\r\n\r\nclass MarkDetail extends Component {\r\n    state = {\r\n        semester: {\r\n            value: \"\",\r\n            touched: false,\r\n            valid: false\r\n        },\r\n        marks: [\r\n            {\r\n                subject: {\r\n                    value: \"\",\r\n                    touched: false,\r\n                    valid: false\r\n                },\r\n                markObtained: {\r\n                    value: \"\",\r\n                    touched: false,\r\n                    valid: false\r\n                }\r\n            }\r\n        ],\r\n        isValid: false,\r\n        editMarkMode: false,\r\n        studentName : \"\",\r\n        addBtnDisable : false,\r\n        subBtnDisable : true\r\n    }\r\n    inputHandler = (event) => {\r\n        if (event.target.value >= 0 && event.target.value.trim() !== \"\") {\r\n            this.setState({\r\n                semester: {\r\n                    value: event.target.value,\r\n                    touched: true,\r\n                    valid: true\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                semester: {\r\n                    value: event.target.value,\r\n                    touched: true,\r\n                    valid: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n    addButtonHandler = () => {\r\n        const values = [...this.state.marks];\r\n        \r\n        if(values.length <=4){\r\n            this.setState({ marks:\r\n                [...this.state.marks,\r\n                {\r\n                    subject: {\r\n                        value: \"\",\r\n                        touched: false,\r\n                        valid: false\r\n                    },\r\n                    markObtained: {\r\n                        value: \"\",\r\n                        touched: false,\r\n                        valid: false\r\n                    }\r\n                }\r\n            ],\r\n            addBtnDisable : false,\r\n            subBtnDisable : false})\r\n        }\r\n        else {\r\n            this.setState({\r\n                marks:\r\n                    [...this.state.marks,\r\n                    {\r\n                        subject: {\r\n                            value: \"\",\r\n                            touched: false,\r\n                            valid: false\r\n                        },\r\n                        markObtained: {\r\n                            value: \"\",\r\n                            touched: false,\r\n                            valid: false\r\n                        }\r\n                    }\r\n                ],\r\n                addBtnDisable : true,\r\n                subBtnDisable : false\r\n            })\r\n        }\r\n    }\r\n    subractButtonHandler = (index) => {\r\n        const values = [...this.state.marks];\r\n        if(values.length === 1){\r\n            this.setState({addBtnDisable : false,subBtnDisable : true})\r\n        }\r\n        else{\r\n            values.splice(index, 1);\r\n            this.setState({ marks: values,subBtnDisable:false,addBtnDisable:false})\r\n        }\r\n    }\r\n    onChangeHandler = (index, event) => {\r\n        const subjectMark = [...this.state.marks];\r\n        if (event.target.value >= 0 && event.target.value < 101 && event.target.value.trim() !== \"\" && event.target.name === \"markObtained\") {\r\n            subjectMark[index][event.target.name].value = event.target.value;\r\n            subjectMark[index][event.target.name].touched = true;\r\n            subjectMark[index][event.target.name].valid = true\r\n        }\r\n        else if (event.target.value.trim() !== \"\" && event.target.name === \"subject\") {\r\n            subjectMark[index][event.target.name].value = event.target.value;\r\n            subjectMark[index][event.target.name].touched = true;\r\n            subjectMark[index][event.target.name].valid = true\r\n        }\r\n        else {\r\n            subjectMark[index][event.target.name].value = event.target.value;\r\n            subjectMark[index][event.target.name].touched = true;\r\n            subjectMark[index][event.target.name].valid = false\r\n        }\r\n        this.setState({ marks: subjectMark }, () => this.validityCheck(event));\r\n    }\r\n    validityCheck = (event) => {\r\n        let formIsValid = true;\r\n        let formValidityCheck = { ...this.state.marks }\r\n        for (let inputIdentifier in formValidityCheck) {\r\n            formIsValid = this.state.semester.valid && formValidityCheck[inputIdentifier].subject.valid && formValidityCheck[inputIdentifier].markObtained.valid && formIsValid\r\n        }\r\n        this.setState({ isValid: formIsValid });\r\n    }\r\n    addMarkToStudent = (event) => {\r\n        event.preventDefault();\r\n        const markData = {};\r\n        markData.studentId = this.props.studentId;\r\n        markData.studentName = this.props.studentName;\r\n        markData.semester = this.state.semester.value;\r\n        markData.marks = [];\r\n        for (let index in this.state.marks) {\r\n            let object = {};\r\n            object.id = +index + 1;\r\n            object.subject = this.state.marks[index].subject.value;\r\n            object.markObtained = this.state.marks[index].markObtained.value;\r\n            markData.marks.push(object);\r\n        }\r\n        this.props.onAddMarkToStudent(this.state.editMarkMode, markData);\r\n        this.resetState();\r\n    }\r\n    resetState =() =>{\r\n        this.setState({\r\n            semester: {\r\n                value: \"\",\r\n                touched: false,\r\n                valid: false\r\n            },\r\n            marks: [\r\n                {\r\n                    subject: {\r\n                        value: \"\",\r\n                        touched: false,\r\n                        valid: false\r\n                    },\r\n                    markObtained: {\r\n                        value: \"\",\r\n                        touched: false,\r\n                        valid: false\r\n                    }\r\n                }\r\n            ],\r\n            isValid: false,\r\n            editMarkMode: false,\r\n            studentName : \"\",\r\n            addBtnDisable : false,\r\n            subBtnDisable : true\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        let object = {...this.state};\r\n        object.studentName = this.props.studentName;\r\n        this.setState(object);\r\n        if (this.state.editMarkMode !== this.props.editMarkMode) {\r\n            if (this.props.studentMarkObject !== null) {\r\n                const updatedStateEditCondition = { ...this.state };\r\n                updatedStateEditCondition.isValid = true;\r\n                updatedStateEditCondition.editMarkMode = true;\r\n                updatedStateEditCondition.studentName = this.props.studentName;\r\n                updatedStateEditCondition.semester.value = this.props.studentMarkObject.semester;\r\n                updatedStateEditCondition.semester.touched = true;\r\n                updatedStateEditCondition.semester.valid = true;\r\n                this.setState(updatedStateEditCondition);\r\n\r\n                let array = [];\r\n\r\n                let editMarks = this.props.studentMarkObject.marks;\r\n\r\n                for(let index in editMarks){\r\n                    let object = {};\r\n                    object.subject = {}\r\n                    object.subject.value = editMarks[index].subject;\r\n                    object.subject.touched = true;\r\n                    object.subject.valid = true;\r\n                    object.markObtained = {};\r\n                    object.markObtained.value = editMarks[index].markObtained\r\n                    object.markObtained.touched = true;\r\n                    object.markObtained.valid = true;\r\n                    array.push(object);\r\n                }\r\n                \r\n                this.setState({marks:array});\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const inputClasses = [\"form-control mb-2\"];\r\n        if (this.state.semester.valid && this.state.semester.touched) {\r\n            inputClasses.push(\"is-valid\");\r\n        }\r\n\r\n        if (!this.state.semester.valid && this.state.semester.touched) {\r\n            inputClasses.push(\"is-invalid\");\r\n        }\r\n        // let studentMark = this.props.studentMarkObject;\r\n        let markContentDetail = (\r\n            <div className=\"form-group\">\r\n                <form onSubmit={this.addMarkToStudent}>\r\n                    <p>{this.state.studentName}</p>\r\n                    <div className=\"form-row Input justify-content-center align-items-start \">\r\n                        <div className=\"col-md-12 mb-2 form-inline \">\r\n                            <label className=\"col-5\">Semester :</label>\r\n                            <input type=\"number\"\r\n                                placeholder=\"Semester\"\r\n                                className={inputClasses.join(' ')}\r\n                                name=\"semester\"\r\n                                value={this.state.semester.value}\r\n                                onChange={this.inputHandler}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <h3>Marks Detail</h3>\r\n                    {this.state.marks.map((e, index) => {\r\n\r\n                        const inputClasse = [\"col-3 form-control mb-2\"];\r\n                        if (e.subject.valid && e.subject.touched) {\r\n                            inputClasse.push(\"is-valid\");\r\n                        }\r\n                        if (!e.subject.valid && e.subject.touched) {\r\n                            inputClasse.push(\"is-invalid\");\r\n                        }\r\n                        const inputClass = [\"col-3 form-control mb-2\"]\r\n\r\n                        if (e.markObtained.valid && e.markObtained.touched) {\r\n                            inputClass.push(\"is-valid\");\r\n                        }\r\n                        if (!e.markObtained.valid && e.markObtained.touched) {\r\n                            inputClass.push(\"is-invalid\");\r\n                        }\r\n                        return (\r\n                            <div className=\"form-row Input justify-content-between align-items-center\" key={index}>\r\n                                <div className=\"col-md-12 mb-1 form-inline justify-content-between \">\r\n                                    <label className=\"col-2 mb-2\">Subject :</label>\r\n                                    <select\r\n                                        className={inputClasse.join(' ')}\r\n                                        name=\"subject\"\r\n                                        value={e.subject.value}\r\n                                        onChange={(event) => this.onChangeHandler(index, event)} >\r\n                                        <option value=\"\" disabled >Select Subject</option>\r\n                                        <option value=\"Physics\"> Physics</option>\r\n                                        <option value=\"Mathamatics\"> Mathamatics</option>\r\n                                        <option value=\"Chemistry\">Chemistry </option>\r\n                                        <option value=\"Economics\"> Economics</option>\r\n                                        <option value=\"Taxation\"> Taxation</option>\r\n                                        <option value=\"Accounts\">Accounts </option>\r\n                                        <option value=\"Moral Values\">Moral Values </option>\r\n                                        <option value=\"History\">History </option>\r\n                                    </select>\r\n                                    <input\r\n                                        className={inputClass.join(' ')}\r\n                                        type=\"number\"\r\n                                        name=\"markObtained\"\r\n                                        placeholder=\"Marks\"\r\n                                        value={e.markObtained.value}\r\n                                        onChange={(event) => this.onChangeHandler(index, event)} />\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary mb-2 col-1\" disabled = {this.state.addBtnDisable} onClick={() => this.addButtonHandler()}>+</button>\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary mb-2 col-1\" disabled = {this.state.subBtnDisable} onClick={() => this.subractButtonHandler(index)}>-</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div className=\"row justify-content-center\">\r\n                        <button className=\"btn btn-outline-primary my-3\" disabled={!this.state.isValid}>Save Marks</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n        return (\r\n            <>\r\n                <Modal show={this.props.activePopup}>\r\n                    {markContentDetail}\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddMarkToStudent: (editMarkMode, markObject) => { dispatch(markAction.addMarkToStudentInit(editMarkMode, markObject)) }\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(MarkDetail);","import React, { Component } from 'react'\r\n\r\nexport default class StudentList extends Component {\r\n    state = {\r\n        activePopup: false,\r\n        editStudentDetailMode: false,\r\n        editStudentDetailModeObject: {},\r\n        editStudentMarksMode: false,\r\n        addButtonDisable : false,\r\n    }\r\n\r\n    editHandler = () => {\r\n        // State Does Not update Soon as asynchronous for that we have to write callback of updated state\r\n        this.setState({ editStudentDetailMode: true }, () => {\r\n            this.props.editClick(this.props.id, this.state.editStudentDetailMode)\r\n        });\r\n    }\r\n    deleteHandler = ()=>{\r\n        this.props.deleteClick(this.props.id);\r\n    }\r\n    addClickHandler = () =>{\r\n        // State Does Not update Soon as asynchronous for that we have to write callback of updated state\r\n        this.setState({activePopup : true},()=>{\r\n            this.props.addClick(this.props.id,this.props.studentName,this.state.activePopup)\r\n        });\r\n    }\r\n    render() {\r\n        let eachChild = (\r\n            <tr key={this.props.id}>\r\n                <td>{`enrol${this.props.id}`}</td>\r\n                <td>{this.props.studentName}</td>\r\n                <td>{this.props.gender}</td>\r\n                <td>{this.props.address}</td>\r\n                <td>{this.props.country}</td>\r\n                <td>{this.props.state}</td>\r\n                <td>{this.props.city}</td>\r\n                <td>{this.props.mobileNumber}</td>\r\n                <td>{this.props.email}</td>\r\n                <td>\r\n                    <button className=\"btn btn-outline-primary btn-sm\" onClick = {this.editHandler}>Edit</button>\r\n                    <button className=\"btn btn-outline-primary btn-sm\" onClick = {this.deleteHandler}>Delete</button>\r\n                    <button className=\"btn btn-outline-primary btn-sm\" disabled = {this.state.addButtonDisable} onClick = {this.addClickHandler}>Add Marks</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n        return (\r\n            <>\r\n                <tbody>\r\n                    {eachChild}\r\n                </tbody>\r\n            </>\r\n        )\r\n    }\r\n}","export const INIT = \"INIT\";\r\nexport const SUCC = \"SUCC\";\r\nexport const STUDENT_DETAIL_SUBMIT_INIT = \"STUDENT_DETAIL_SUBMIT_INIT\";\r\nexport const STUDENT_DETAIL_SUBMIT_SUCCESS = \"STUDENT_DETAIL_SUBMIT_SUCCESS\";\r\nexport const EDIT_STUDENT_DETAIL_INIT = \"EDIT_STUDENT_DETAIL_INIT\";\r\nexport const EDIT_STUDENT_DETAIL_SUCCESS = \"EDIT_STUDENT_DETAIL_SUCCESS\";\r\nexport const DELETE_STUDENT_DETAIL_INIT = \"DELETE_STUDENT_DETAIL_INIT\";\r\nexport const DELETE_STUDENT_DETAIL_SUCCESS = \"DELETE_STUDENT_DETAIL_SUCCESS\";\r\n\r\n\r\nexport const initilizerHandler =()=>{\r\n    return{\r\n        type : INIT      \r\n    }\r\n}\r\nexport const submitFormHandler = (editStudentDetailMode,studentDetailObject) =>{\r\n    return{\r\n        type : STUDENT_DETAIL_SUBMIT_INIT,\r\n        editStudentDetailMode:editStudentDetailMode,\r\n        studentDetailObject:studentDetailObject\r\n    }\r\n}\r\nexport const submitFormHandlerSuccess = (schoolApp) =>{\r\n    return{\r\n        type : STUDENT_DETAIL_SUBMIT_SUCCESS,\r\n        editStudentDetailMode : schoolApp.editStudentDetailMode,\r\n        studentDetail : schoolApp.studentDetail,\r\n        editStudentDetailModeObject : schoolApp.editStudentDetailModeObject\r\n    }\r\n}\r\nexport const editStudentDetailHandler = (id,editStudentDetailMode) =>{\r\n    return{\r\n        type:EDIT_STUDENT_DETAIL_INIT,\r\n        id : id,\r\n        editStudentDetailMode : editStudentDetailMode\r\n    }\r\n}\r\n\r\nexport const editStudentDetailHandlerSuccess = (schoolApp) =>{\r\n    return{\r\n        type:EDIT_STUDENT_DETAIL_SUCCESS,\r\n        editStudentDetailMode : schoolApp.editStudentDetailMode,\r\n        editStudentDetailModeObject : schoolApp.editStudentDetailModeObject\r\n    }\r\n}\r\n\r\nexport const deleteStudentDetailHandler = (id) =>{\r\n    return{\r\n        type:DELETE_STUDENT_DETAIL_INIT,\r\n        id:id\r\n    }\r\n}\r\n\r\nexport const deleteStudentDetailHandlerSuccess = (schoolApp) =>{\r\n    return{\r\n        type:DELETE_STUDENT_DETAIL_SUCCESS,\r\n        studentDetail : schoolApp.studentDetail\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n\r\n    editStudentDetailMode : false,\r\n    editStudentDetailModeObject : {},\r\n    editStudentMarksMode:false,\r\n    studentDetail : [],\r\n    initState : null,\r\n    addStudentMarkObject: {}\r\n}\r\nconst reducer = (state=initialState,action) => {\r\n    switch(action.type){\r\n        case STUDENT_DETAIL_SUBMIT_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editStudentDetailMode : action.editStudentDetailMode,\r\n            studentDetail : action.studentDetail,\r\n            editStudentDetailModeObject : action.editStudentDetailModeObject\r\n        }\r\n        case EDIT_STUDENT_DETAIL_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editStudentDetailMode : action.editStudentDetailMode,\r\n            editStudentDetailModeObject : action.editStudentDetailModeObject\r\n        }\r\n        case DELETE_STUDENT_DETAIL_SUCCESS : \r\n        return{\r\n            ...state,\r\n            studentDetail : action.studentDetail\r\n        }\r\n\r\n        default : \r\n        return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","import React, { Component } from 'react'\r\nimport StudentList from \"./StudentList/StudentList\"\r\nimport {connect} from \"react-redux\";\r\nimport * as formAction from \"../../Store/Redux/reducer\"\r\nimport * as markAction from \"../../Store/Redux/MarkReducer\";\r\n\r\nclass StudentSummary extends Component {\r\n    render() {\r\n        let student = (\r\n            this.props.studentDetail.map(details =>{\r\n                return(\r\n                    <StudentList \r\n                    key = {details.id}\r\n                    id = {details.id}\r\n                    studentName = {`${details.firstName} ${details.lastName}`}\r\n                    gender = {details.gender}\r\n                    address = {details.street}\r\n                    country = {details.country}\r\n                    state = {details.state}\r\n                    city = {details.city}\r\n                    mobileNumber = {details.mobileNumber}\r\n                    email = {details.email}\r\n                    editClick = {this.props.onEditStudentDetailHandler}\r\n                    deleteClick = {this.props.onDeleteStudentDetailHandler}\r\n                    addClick = {this.props.onAddMarkDetailHandler}\r\n                \r\n                />\r\n                )\r\n            })\r\n        )\r\n        return (\r\n            <div>\r\n                 <h1>Student Summary </h1>\r\n                 <table className=\"table table-striped\">\r\n                 <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Student Name</th>\r\n                        <th>Gender</th>\r\n                        <th>Address</th>\r\n                        <th>Country</th>\r\n                        <th>State</th>\r\n                        <th>City</th>\r\n                        <th>Mobile Number</th>\r\n                        <th>E-mail</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                {student}\r\n                 </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        activePopup : state.MarkReducer.activePopup,\r\n        editStudentDetailMode : state.reducer.editStudentDetailMode,\r\n        markDetail : state.reducer.markDetail\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onEditStudentDetailHandler : (id,editStudentDetailMode)=>{dispatch(formAction.editStudentDetailHandler(id,editStudentDetailMode))},\r\n        onDeleteStudentDetailHandler : (id)=>{dispatch(formAction.deleteStudentDetailHandler(id))},\r\n        onAddMarkDetailHandler : (id,studentName,activePopup)=>{dispatch(markAction.addMarkDetailHandler(id,studentName,activePopup))},\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(StudentSummary)\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as markAction from \"../../Store/Redux/MarkReducer\";\r\n\r\nclass MarkSummary extends Component {\r\n    editStudentMark=(details,index,key) =>{\r\n        this.props.onEditStudentMark(details);\r\n    }\r\n    render() {\r\n        let markSummary = (\r\n            this.props.markDetail.map(details =>{\r\n                return(\r\n                    <div className=\"col-sm-6\" key ={details.studentId}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{`${details.studentName} Mark's`}</h5>\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Sr.No</th>\r\n                                        <th>Subject</th>\r\n                                        <th>Marks</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {details.marks.map(score => {\r\n                                        return (\r\n                                        <tr key = {score.id}>\r\n                                            <td>{score.id}</td>\r\n                                            <td>{score.subject}</td>\r\n                                            <td>{score.markObtained}</td>\r\n                                        </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                            <button className=\"btn btn-outline-primary\" onClick ={(index,key)=>this.editStudentMark(details,index,key)}>Edit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )\r\n            })\r\n           \r\n        )\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <h3>Student Marks Summary</h3>\r\n                <div className=\"row\">\r\n                    {markSummary}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onEditStudentMark : (editObject) =>{dispatch(markAction.editStudentMarkInit(editObject))}\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(MarkSummary);","import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport StudentForm from \"../Component/StudentForm/StudentForm\"\r\nimport MarkDetail from \"../Component/MarkDetail/MarkDetail\"\r\nimport StudentSummary from \"../Component/StudentSummary/StudentSummary\"\r\nimport MarkSummary from \"../Component/MarkSummary/MarkSummary\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport * as formAction from \"../Store/Redux/reducer\";\r\nclass SchoolForm extends Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.onInitilizing();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container px-5\">\r\n                <h2 className = \"pl-lg-5\">School Admission Form</h2>\r\n                <StudentForm \r\n                submitForm = {this.props.onSubmitForm}\r\n                editStudentDetailMode = {this.props.editStudentDetailMode} \r\n                editStudentDetailModeObject ={this.props.editStudentDetailModeObject}\r\n                initState = {this.props.initState}\r\n                />\r\n                {this.props.studentDetail.length !== 0 ? \r\n                <StudentSummary \r\n                studentDetail = {this.props.studentDetail}\r\n                /> : \r\n                null }\r\n                {this.props.activePopup ? \r\n                <MarkDetail\r\n                 activePopup = {this.props.activePopup}\r\n                 studentId = {this.props.studentId}\r\n                 studentName = {this.props.studentName}   \r\n                 editMarkMode = {this.props.editMarkMode}\r\n                 studentMarkObject = {this.props.studentMarkObject}\r\n                 /> : null}\r\n                 {this.props.markDetail.length !== 0 ? \r\n                <MarkSummary\r\n                 markDetail = {this.props.markDetail}\r\n                /> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        editStudentDetailMode : state.reducer.editStudentDetailMode,\r\n        editStudentDetailModeObject : state.reducer.editStudentDetailModeObject,\r\n        studentDetail : state.reducer.studentDetail,\r\n        initState : state.reducer.initState,\r\n        editMarkMode : state.MarkReducer.editMarkMode,\r\n\r\n        addButtonDisable : state.MarkReducer.addButtonDisable,\r\n        activePopup : state.MarkReducer.activePopup,\r\n        studentMarkObject : state.MarkReducer.studentMarkObject,\r\n        studentId : state.MarkReducer.studentId,\r\n        studentName : state.MarkReducer.studentName,\r\n        markDetail : state.MarkReducer.markDetail\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onInitilizing : ()=>{dispatch(formAction.initilizerHandler())},\r\n        onSubmitForm : (editStudentDetailMode,studentDetailObject)=>{dispatch(formAction.submitFormHandler(editStudentDetailMode,studentDetailObject))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SchoolForm);\r\n","import './App.css';\nimport SchoolForm from './Container/SchoolForm';\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <SchoolForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport MarkReducer from \"./MarkReducer\";\r\n\r\nexport default combineReducers({\r\n    reducer,MarkReducer\r\n})","import { put } from \"redux-saga/effects\";\r\nimport * as actionType from \"../Redux/reducer\";\r\n\r\nexport function* initilizerHandlerSaga() {\r\n    window.localStorage.clear();\r\n    const schoolApp = {\r\n        editStudentDetailMode: false,\r\n        editStudentDetailModeObject: {},\r\n        studentDetail: [],\r\n      \r\n    }\r\n    const markApp = {\r\n        activePopup : false,\r\n        studentMarkObject : {},\r\n        editMarkMode : false,\r\n        markDetail : [],\r\n        studentId : \"\",\r\n        studentName : \"\"\r\n    }\r\n    yield localStorage.setItem(\"schoolApp\", JSON.stringify(schoolApp));\r\n    yield localStorage.setItem(\"markApp\",JSON.stringify(markApp));\r\n}\r\n\r\nexport function* submitFormHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"schoolApp\"));\r\n    const updateValue = { ...localValue };\r\n    if (action.studentDetailObject.id !== null && action.editStudentDetailMode === true) {\r\n        const editObjIndex = updateValue.studentDetail.findIndex(student => student.id === action.studentDetailObject.id)\r\n        updateValue.studentDetail[editObjIndex] = action.studentDetailObject;\r\n        updateValue.editStudentDetailModeObject = {};\r\n    }\r\n    else {\r\n        let studentLast = null;\r\n        if (updateValue.studentDetail.length !== 0) {\r\n            const expenseLastItem = updateValue.studentDetail[updateValue.studentDetail.length - 1];\r\n            studentLast = +expenseLastItem.id;\r\n        }\r\n        else {\r\n            studentLast = 0;\r\n        }\r\n        const studentDetailObject = action.studentDetailObject;\r\n        studentDetailObject.id = studentLast + 1;\r\n        updateValue.studentDetail.push(studentDetailObject);\r\n    }\r\n    updateValue.editStudentDetailMode = false;\r\n    yield localStorage.setItem(\"schoolApp\", JSON.stringify(updateValue));\r\n    yield put(actionType.submitFormHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* editStudentDetailHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"schoolApp\"));\r\n    const updateValue = { ...localValue };\r\n    updateValue.editStudentDetailMode = action.editStudentDetailMode\r\n    const editObj = updateValue.studentDetail.find(student => student.id === action.id);\r\n    updateValue.editStudentDetailModeObject = editObj;\r\n    yield localStorage.setItem(\"schoolApp\", JSON.stringify(updateValue));\r\n    yield put(actionType.editStudentDetailHandlerSuccess(updateValue));\r\n\r\n}\r\n\r\nexport function* deleteStudentDetailHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"schoolApp\"));\r\n    const updateValue = { ...localValue };\r\n    const editObjIndex = updateValue.studentDetail.findIndex(student => student.id === action.id);\r\n    updateValue.studentDetail.splice(editObjIndex, 1);\r\n    yield localStorage.setItem(\"schoolApp\", JSON.stringify(updateValue));\r\n    yield put(actionType.deleteStudentDetailHandlerSuccess(updateValue));\r\n}\r\n\r\n","import { put } from \"redux-saga/effects\";\r\nimport * as actionMarkType from \"../Redux/MarkReducer\";\r\n\r\nexport function* addMarkDetailHandlerSaga(action) {\r\n    // const localStudentValue = JSON.parse(localStorage.getItem(\"schoolApp\"));\r\n    // const studentDetailFromStorage = { ...localStudentValue };\r\n    const localMarkValue = JSON.parse(localStorage.getItem(\"markApp\"));\r\n    const updateValue = { ...localMarkValue };\r\n    updateValue.activePopup = action.activePopup;\r\n    yield localStorage.setItem(\"markApp\", JSON.stringify(updateValue));\r\n    yield put(actionMarkType.addMarkDetailHandlerSuccess(updateValue,action.id,action.studentName));\r\n}\r\n\r\nexport function* addMarkToStudentSaga(action){\r\n    const localMarkValue = JSON.parse(localStorage.getItem(\"markApp\"));\r\n    const updateValue = { ...localMarkValue };\r\n    if(action.editMarkMode){\r\n        const editObjIndex = updateValue.markDetail.findIndex(mark => mark.studentId === action.markObject.studentId)\r\n        updateValue.markDetail[editObjIndex] = action.markObject;\r\n    }\r\n    else{\r\n        updateValue.markDetail.push(action.markObject);\r\n    }\r\n    updateValue.studentMarkObject = {};\r\n    updateValue.studentId = \"\";\r\n    updateValue.studentName = \"\";\r\n    updateValue.activePopup = false;\r\n    updateValue.editMarkMode = false;\r\n    yield localStorage.setItem(\"markApp\", JSON.stringify(updateValue));\r\n    yield put(actionMarkType.addMarkToStudentSuccess(updateValue));\r\n}\r\n\r\nexport function* editStudentMarkSaga(action) {\r\n    const localMarkValue = JSON.parse(localStorage.getItem(\"markApp\"));\r\n    const updateValue = { ...localMarkValue };\r\n    // const editMarkObj = updateValue.markDetail.find(student => student.studentId === action.editObject.studentId);\r\n    updateValue.studentMarkObject = action.editObject;\r\n    updateValue.editMarkMode = true;\r\n    updateValue.activePopup = true;\r\n    updateValue.studentId = action.editObject.studentId;\r\n    updateValue.studentName =action.editObject.studentName;\r\n\r\n    yield localStorage.setItem(\"markApp\", JSON.stringify(updateValue));\r\n    yield put(actionMarkType.editStudentMarkSuccess(updateValue));  \r\n}","import { takeLatest } from \"@redux-saga/core/effects\";\r\nimport * as actionType from \"../Redux/reducer\";\r\nimport * as actionMarkType from \"../Redux/MarkReducer\";\r\nimport {initilizerHandlerSaga,submitFormHandlerSaga,editStudentDetailHandlerSaga,deleteStudentDetailHandlerSaga} from \"./saga\";\r\nimport {addMarkDetailHandlerSaga,addMarkToStudentSaga,editStudentMarkSaga} from \"./MarkSaga\";\r\n\r\nexport function* watch(){\r\n    yield takeLatest(actionType.INIT,initilizerHandlerSaga);\r\n    yield takeLatest(actionType.STUDENT_DETAIL_SUBMIT_INIT,submitFormHandlerSaga);\r\n    yield takeLatest(actionType.EDIT_STUDENT_DETAIL_INIT,editStudentDetailHandlerSaga);\r\n    yield takeLatest(actionType.DELETE_STUDENT_DETAIL_INIT,deleteStudentDetailHandlerSaga);\r\n    yield takeLatest(actionMarkType.ADD_MARK_DETAIL_INIT,addMarkDetailHandlerSaga);\r\n    yield takeLatest(actionMarkType.SUBMIT_BUTTON_HANDLER_INIT,addMarkToStudentSaga)\r\n    yield takeLatest(actionMarkType.EDIT_MARK_INIT,editStudentMarkSaga);\r\n\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from \"react-redux\";\nimport {createStore,applyMiddleware,compose} from \"redux\";\nimport rootReducer from \"./Store/Redux/index\";\n\nimport {watch} from \"./Store/Saga/index\";\n\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(watch);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n   </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}